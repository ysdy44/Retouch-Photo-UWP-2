<Page
    x:Class="Retouch_Photo2.DrawPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:canvas="using:Microsoft.Graphics.Canvas.UI.Xaml"
    xmlns:developerTools="using:Microsoft.Toolkit.Uwp.DeveloperTools"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:hsvColorPickers="using:HSVColorPickers"
    xmlns:menus="using:Retouch_Photo2.Menus"
    xmlns:toolsElements="using:Retouch_Photo2.Tools.Elements"
    xmlns:elements="using:Retouch_Photo2.Elements"
    xmlns:photos="using:Retouch_Photo2.Photos"
    xmlns:transformers="using:FanKit.Transformers" 
    xmlns:local="using:Retouch_Photo2"
    NavigationCacheMode="Required"    
    mc:Ignorable="d"
    Background="{ThemeResource AppBackgroundDark}"
    >


    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition DefaultNavigationTransitionInfo="{StaticResource AppSuppressTransition}"/>
        </TransitionCollection>
    </Page.Transitions>


    <Page.Resources>
        
        <!--Color-->
        <SolidColorBrush x:Name="AccentColorBrush" Color="{ThemeResource SystemAccentColor}" />
        <SolidColorBrush x:Name="ShadowColorBrush" Color="{ThemeResource AppStrokeColor}" />


        <!--Flyout-->
        <Flyout x:Name="DocumentFlyout" LightDismissOverlayMode="{StaticResource AppLightDismissOverlayMode}" Placement="Bottom" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
            <ListViewItem x:Name="DocumentUnSaveItem">
                <ContentControl x:Name="DocumentUnSaveControl" Style="{StaticResource AppIconContentControlStyle}">
                    <ContentControl.Tag>
                        <FontIcon Glyph="&#xF78A;" FontSize="16" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                    </ContentControl.Tag>
                </ContentControl>
            </ListViewItem>
        </Flyout>


        <Flyout x:Name="FillColorFlyout" LightDismissOverlayMode="{StaticResource AppLightDismissOverlayMode}" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
            <hsvColorPickers:ColorPicker x:Name="FilColorPicker" 
                                     Width="Auto" 
                                     Background="Transparent" 
                                     TextStyle="{StaticResource AppTextBlockStyle}" 
                                     FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}"
                                     ButtonStyle="{StaticResource AppNumberButtonStyle}" 
                                     Stroke="{ThemeResource AppBorderBrush}"
                                     />
        </Flyout>
        <Flyout x:Name="StrokeColorFlyout" LightDismissOverlayMode="{StaticResource AppLightDismissOverlayMode}" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
            <hsvColorPickers:ColorPicker x:Name="StrokeColorPicker" 
                                     Width="Auto" 
                                     Background="Transparent" 
                                     TextStyle="{StaticResource AppTextBlockStyle}" 
                                     FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}"
                                     ButtonStyle="{StaticResource AppNumberButtonStyle}" 
                                     Stroke="{ThemeResource AppBorderBrush}"
                                     />
        </Flyout>


        <Flyout x:Name="MoreFlyout" LightDismissOverlayMode="{StaticResource AppLightDismissOverlayMode}" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
            <ScrollViewer Style="{StaticResource AppVerticalScrollViewerStyle}">
                <StackPanel>

                    <!--Transform-->
                    <ListViewItem x:Name="TransformGroupHeader" Style="{StaticResource AppGroupHeaderListViewItemStyle}"/>
                    <!--Ratio-->
                    <ListViewItem x:Name="RatioItem" IsSelected="{x:Bind SettingViewModel.IsRatio, Mode=TwoWay}">
                        <ContentControl x:Name="RatioControl" Style="{StaticResource AppIconContentControlStyle}">
                            <ContentControl.Tag>
                                <FontIcon Glyph="&#x1F512;" FontSize="18" FontWeight="Bold" FontFamily="Segoe UI Symbol"/>
                            </ContentControl.Tag>
                        </ContentControl>
                    </ListViewItem>
                    <!--SnapToTick-->
                    <ListViewItem x:Name="SnapToTickItem" IsSelected="{x:Bind SettingViewModel.IsSnapToTick, Mode=TwoWay}">
                        <ContentControl x:Name="SnapToTickControl" Style="{StaticResource AppIconContentControlStyle}">
                            <ContentControl.Resources>
                                <ResourceDictionary Source="ms-appx:///Retouch Photo2.Tools/Elements/SnapToTickIcon.xaml"/>
                            </ContentControl.Resources>
                            <ContentControl.Tag>
                                <ContentControl Template="{StaticResource SnapToTickIcon}"/>
                            </ContentControl.Tag>
                        </ContentControl>
                    </ListViewItem>

                    <ListViewItem Style="{ThemeResource AppSeparatorListViewItemStyle}" />

                    <!--Transform-->
                    <ListViewItem x:Name="CreateGroupHeader" Style="{StaticResource AppGroupHeaderListViewItemStyle}"/>
                    <!--Square-->
                    <ListViewItem x:Name="SquareItem" IsSelected="{x:Bind SettingViewModel.IsSquare, Mode=TwoWay}">
                        <ContentControl x:Name="SquareControl" Style="{StaticResource AppIconContentControlStyle}">
                            <ContentControl.Tag>
                                <FontIcon Glyph="&#x1F512;" FontSize="18" FontWeight="Bold" FontFamily="Segoe UI Symbol"/>
                            </ContentControl.Tag>
                        </ContentControl>
                    </ListViewItem>
                    <!--Center-->
                    <ListViewItem x:Name="CenterItem" IsSelected="{x:Bind SettingViewModel.IsCenter, Mode=TwoWay}">
                        <ContentControl x:Name="CenterControl" Style="{StaticResource AppIconContentControlStyle}">
                            <ContentControl.Tag>
                                <FontIcon Glyph="&#x1F512;" FontSize="18" FontWeight="Bold" FontFamily="Segoe UI Symbol"/>
                            </ContentControl.Tag>
                        </ContentControl>
                    </ListViewItem>

                    <ListViewItem Style="{ThemeResource AppSeparatorListViewItemStyle}" />

                    <!--Operate-->
                    <ListViewItem x:Name="OperateGroupHeader" Style="{StaticResource AppGroupHeaderListViewItemStyle}"/>
                    <!--WheelToRotate-->
                    <ListViewItem x:Name="WheelToRotateItem" IsSelected="{x:Bind SettingViewModel.IsWheelToRotate, Mode=TwoWay}">
                        <ContentControl x:Name="WheelToRotateControl" Style="{StaticResource AppIconContentControlStyle}">
                            <ContentControl.Tag>
                                <FontIcon Glyph="&#x1F512;" FontSize="18" FontWeight="Bold" FontFamily="Segoe UI Symbol"/>
                            </ContentControl.Tag>
                        </ContentControl>
                    </ListViewItem>

                </StackPanel>
            </ScrollViewer>
        </Flyout>


        <Flyout x:Name="EditFlyout" LightDismissOverlayMode="{StaticResource AppLightDismissOverlayMode}" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
            <menus:EditMenu x:Name="EditMenu" Flyout="{x:Bind EditFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}" />
        </Flyout>
        <Flyout x:Name="OperateFlyout" LightDismissOverlayMode="{StaticResource AppLightDismissOverlayMode}" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
            <menus:OperateMenu x:Name="OperateMenu" Flyout="{x:Bind OperateFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}" 
                               IsOpen="{x:Bind ViewModel.IsOpen, Mode=OneWay}"/>
        </Flyout>
        <Flyout x:Name="AdjustmentFlyout" LightDismissOverlayMode="{StaticResource AppLightDismissOverlayMode}" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
            <menus:AdjustmentMenu x:Name="AdjustmentMenu" Flyout="{x:Bind AdjustmentFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}"
                               MenuIsEnabled="{x:Bind SelectionViewModel.SelectionSingle, Mode=OneWay}"/>
        </Flyout>
        <Flyout x:Name="EffectFlyout" LightDismissOverlayMode="{StaticResource AppLightDismissOverlayMode}" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
            <menus:EffectMenu x:Name="EffectMenu" Flyout="{x:Bind EffectFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}"
                               Effect="{x:Bind SelectionViewModel.Effect, Mode=OneWay}"/>
        </Flyout>

        <Flyout x:Name="TextFlyout" LightDismissOverlayMode="{StaticResource AppLightDismissOverlayMode}" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
            <menus:TextMenu x:Name="TextMenu" Flyout="{x:Bind TextFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}"
                               IsOpen="{x:Bind ViewModel.IsOpen, Mode=OneWay}"/>
        </Flyout>
        <Flyout x:Name="StrokeFlyout" LightDismissOverlayMode="{StaticResource AppLightDismissOverlayMode}" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
            <menus:StrokeMenu x:Name="StrokeMenu" Flyout="{x:Bind StrokeFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}"
                               IsOpen="{x:Bind ViewModel.IsOpen, Mode=OneWay}"/>
        </Flyout>
        <Flyout x:Name="StyleFlyout" LightDismissOverlayMode="{StaticResource AppLightDismissOverlayMode}" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
            <menus:StyleMenu x:Name="StyleMenu" Flyout="{x:Bind StyleFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}"/>
        </Flyout>
        <Flyout x:Name="FilterFlyout" LightDismissOverlayMode="{StaticResource AppLightDismissOverlayMode}" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
            <menus:FilterMenu x:Name="FilterMenu" Flyout="{x:Bind FilterFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}"/>
        </Flyout>

        <Flyout x:Name="HistoryFlyout" LightDismissOverlayMode="{StaticResource AppLightDismissOverlayMode}" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
            <menus:HistoryMenu x:Name="HistoryMenu" Flyout="{x:Bind HistoryFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}"/>
        </Flyout>
        <Flyout x:Name="TransformerFlyout" LightDismissOverlayMode="{StaticResource AppLightDismissOverlayMode}" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
            <menus:TransformerMenu x:Name="TransformerMenu" Flyout="{x:Bind TransformerFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}"
                            IsOpen="{x:Bind ViewModel.IsOpen, Mode=OneWay}" Mode="{x:Bind SelectionViewModel.SelectionMode, Mode=OneWay}" Transformer="{x:Bind SelectionViewModel.Transformer, Mode=OneWay}" ToolType="{x:Bind ViewModel.ToolType, Mode=OneWay}"/>
        </Flyout>
        <Flyout x:Name="LayerFlyout" LightDismissOverlayMode="{StaticResource AppLightDismissOverlayMode}" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
            <menus:LayerMenu x:Name="LayerMenu" Flyout="{x:Bind LayerFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}"/>
        </Flyout>

        <Flyout x:Name="PantoneFlyout" LightDismissOverlayMode="{StaticResource AppLightDismissOverlayMode}" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
            <menus:PantoneMenu x:Name="PantoneMenu" Flyout="{x:Bind PantoneFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}"/>
        </Flyout>
        <Flyout x:Name="ColorFlyout" LightDismissOverlayMode="{StaticResource AppLightDismissOverlayMode}" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
            <menus:ColorMenu x:Name="ColorMenu" Flyout="{x:Bind ColorFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}"/>
        </Flyout>

    </Page.Resources>


    <Grid x:Name="RootGrid" Background="{x:Bind SettingViewModel.CanvasBackground, Mode=OneWay}">


        <!--Extension-->
        <elements:ApplicationTitleBarExtension x:Name="ApplicationView" TitleBarColor="{ThemeResource AppBackgroundColor}"/>


        <!--AlignmentGrid-->
        <developerTools:AlignmentGrid Opacity="0.15" HorizontalStep="20" VerticalStep="20" LineBrush="Gray" Visibility="{ThemeResource AppGridVisibility}" />


        <!--Body-->
        <canvas:CanvasControl x:Name="LayerRenderCanvasControl" FlowDirection="LeftToRight"/>
        <canvas:CanvasControl x:Name="ToolDrawCanvasControl" FlowDirection="LeftToRight"/>


        <elements:DrawLayout x:Name="DrawLayout" 
               DeviceLayoutType="{x:Bind SettingViewModel.DeviceLayoutType, Mode=OneWay}"
               IsFullScreen="True"
               FootPage="{x:Bind ToolTypeComboBox.Tool.Page, Mode=OneWay}"
               >
            <!--LeftIcon-->
            <elements:DrawLayout.LeftIcon>
                <ContentControl Template="{x:Bind ToolTypeComboBox.Tool.Icon, Mode=OneWay}"/>
            </elements:DrawLayout.LeftIcon>

            <!--RightPane-->
            <elements:DrawLayout.RightPanel>
                <ScrollViewer x:Name="LayersScrollViewer" Style="{StaticResource AppVerticalScrollViewerStyle}">
                    <!--Layers-->
                </ScrollViewer>
            </elements:DrawLayout.RightPanel>

            <!--LeftPanel-->
            <elements:DrawLayout.LeftPanel>
                <toolsElements:ToolTypeComboBox x:Name="ToolTypeComboBox"                                    
                            Type="{x:Bind ViewModel.ToolType, Mode=TwoWay}"
                            IsOpen="{x:Bind ViewModel.IsOpen, Mode=OneWay}"
                            DeviceLayoutType="{x:Bind SettingViewModel.DeviceLayoutType, Mode=OneWay}"
                             />
            </elements:DrawLayout.LeftPanel>

            <!--Head-->
            <elements:DrawLayout.HeadChild>
                <Grid x:Name="AppBarGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="DocumentColumnDefinition" MinWidth="50" MaxWidth="140"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>


                    <!--Document-->
                    <ListViewItem x:Name="DocumentButton" MinWidth="50" HorizontalContentAlignment="Center">
                        <TextBlock x:Name="DocumentTextBlock" FontWeight="Bold" TextTrimming="CharacterEllipsis"/>
                    </ListViewItem>

                    <!--Left-->
                    <StackPanel x:Name="LeftStackPanel" Grid.Column="1" Orientation="Horizontal">
                        <Button x:Name="ExportButton" Foreground="Black" Background="#FFC003" Style="{StaticResource AppRoundedButtonStyle}">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="ExportToolTip" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                            </ToolTipService.ToolTip>
                            <FontIcon Glyph="&#xE78B;" FontSize="22" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                        </Button>
                        <Button x:Name="UndoButton" IsEnabled="{x:Bind ViewModel.IsUndoEnabled, Mode=OneWay}" Style="{StaticResource AppCircleButtonStyle}">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="UndoToolTip" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                            </ToolTipService.ToolTip>
                            <FontIcon Glyph="&#xE10E;" FontSize="18" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                        </Button>
                        <!--<Button x:Name="RedoButton" Style="{StaticResource AppCircleButtonStyle}">
                               <ToolTipService.ToolTip>
                                <ToolTip x:Name="RedoToolTip" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                            </ToolTipService.ToolTip>
                        <FontIcon Glyph="&#xE10D;" FontSize="18" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                        </Button>-->
                        <Button x:Name="SetupButton" Style="{StaticResource AppCircleButtonStyle}">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="SetupToolTip" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                            </ToolTipService.ToolTip>
                            <FontIcon Glyph="&#xE123;" FontSize="20" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                        </Button>
                        <ToggleButton x:Name="SnapButton" IsChecked="{x:Bind SettingViewModel.IsSnap, Mode=TwoWay}" Style="{StaticResource AppCircleToggleButtonStyle}">
                            <ToggleButton.Resources>
                                <ResourceDictionary Source="ms-appx:///Retouch Photo2.Elements/$DrawPages/SnapIcon.xaml"/>
                            </ToggleButton.Resources>
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="SnapToolTip" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                            </ToolTipService.ToolTip>
                            <ContentControl Template="{StaticResource SnapIcon}"/>
                        </ToggleButton>
                        <!--
                        <ToggleButton x:Name="RulerButton" IsChecked="{x:Bind SettingViewModel.IsRuler, Mode=TwoWay}" Style="{StaticResource AppCircleToggleButtonStyle}">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="RulerToolTip" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                            </ToolTipService.ToolTip>
                            <FontIcon Glyph="&#xECC6;" FontSize="20" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                        </ToggleButton>
                        -->
                        <Button x:Name="FullScreenButton" Style="{StaticResource AppCircleButtonStyle}">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="FullScreenToolTip" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                            </ToolTipService.ToolTip>
                            <FontIcon Glyph="&#xE92D;" FontSize="16" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                        </Button>
                        <ToggleButton x:Name="TipButton" IsChecked="{x:Bind ViewModel.IsOpen, Mode=OneWay}" Style="{StaticResource AppCircleToggleButtonStyle}">
                            <FontIcon Glyph="&#xE897;" FontSize="18" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                        </ToggleButton>
                    </StackPanel>


                    <!--Overflow-->
                    <Button x:Name="OverflowButton" Grid.Column="2" Background="{ThemeResource AppBackgroundLight}" Style="{StaticResource AppCircleButtonStyle}">
                        <ToolTipService.ToolTip>
                            <ToolTip x:Name="OverflowToolTip" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                        </ToolTipService.ToolTip>
                        <Button.Flyout>
                            <Flyout x:Name="OverflowFlyout" LightDismissOverlayMode="{StaticResource AppLightDismissOverlayMode}" Placement="Bottom" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
                                <ScrollViewer Style="{StaticResource AppVerticalScrollViewerStyle}">
                                    <StackPanel x:Name="OverflowStackPanel">

                                        <ListViewItem x:Name="OverflowExportItem" Foreground="Black" Background="#FFC003">
                                            <ContentControl x:Name="OverflowExportControl" Style="{StaticResource AppIconContentControlStyle}">
                                                <ContentControl.Tag>
                                                    <FontIcon Glyph="&#xE78B;" FontSize="22" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                                                </ContentControl.Tag>
                                            </ContentControl>
                                        </ListViewItem>
                                        <ListViewItem x:Name="OverflowUndoItem" IsEnabled="{x:Bind ViewModel.IsUndoEnabled, Mode=OneWay}">
                                            <ContentControl x:Name="OverflowUndoControl" Style="{StaticResource AppIconContentControlStyle}">
                                                <ContentControl.Tag>
                                                    <FontIcon Glyph="&#xE10E;" FontSize="18" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                                                </ContentControl.Tag>
                                            </ContentControl>
                                        </ListViewItem>
                                        <!--
                                        <ListViewItem x:Name="OverflowRedoItem">
                                            <ContentControl x:Name="OverflowRedoControl" Style="{StaticResource AppIconContentControlStyle}">
                                                <ContentControl.Tag>
                                                    <FontIcon Glyph="&#xE10D;" FontSize="18" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                                                </ContentControl.Tag>
                                            </ContentControl>
                                        </ListViewItem>
                                        -->
                                        <ListViewItem x:Name="OverflowSetupItem">
                                            <ContentControl x:Name="OverflowSetupControl" Style="{StaticResource AppIconContentControlStyle}">
                                                <ContentControl.Tag>
                                                    <FontIcon Glyph="&#xE123;" FontSize="20" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                                                </ContentControl.Tag>
                                            </ContentControl>
                                        </ListViewItem>
                                        <ListViewItem x:Name="OverflowSnapItem" IsSelected="{x:Bind SettingViewModel.IsSnap, Mode=TwoWay}">
                                            <ContentControl x:Name="OverflowSnapControl" Style="{StaticResource AppIconContentControlStyle}">
                                                <ContentControl.Resources>
                                                    <ResourceDictionary Source="ms-appx:///Retouch Photo2.Elements/$DrawPages/SnapIcon.xaml"/>
                                                </ContentControl.Resources>
                                                <ContentControl.Tag>
                                                    <ContentControl Template="{StaticResource SnapIcon}"/>
                                                </ContentControl.Tag>
                                            </ContentControl>
                                        </ListViewItem>
                                        <!--
                                        <ListViewItem x:Name="OverflowRulerItem" IsSelected="{x:Bind SettingViewModel.IsRuler, Mode=TwoWay}">
                                            <ContentControl x:Name="OverflowRulerControl" Style="{StaticResource AppIconContentControlStyle}">
                                                <ContentControl.Tag>
                                                    <FontIcon Glyph="&#xECC6;" FontSize="20" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                                                </ContentControl.Tag>
                                            </ContentControl>
                                        </ListViewItem>
                                        -->
                                        <ListViewItem x:Name="OverflowFullScreenItem">
                                            <ContentControl x:Name="OverflowFullScreenControl" Style="{StaticResource AppIconContentControlStyle}">
                                                <ContentControl.Tag>
                                                    <FontIcon Glyph="&#xE92D;" FontSize="16" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                                                </ContentControl.Tag>
                                            </ContentControl>
                                        </ListViewItem>
                                        <ListViewItem x:Name="OverflowTipItem" IsSelected="{x:Bind ViewModel.IsOpen, Mode=OneWay}">
                                            <ContentControl x:Name="OverflowTipControl" Style="{StaticResource AppIconContentControlStyle}">
                                                <ContentControl.Tag>
                                                    <FontIcon Glyph="&#xE897;" FontSize="18" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                                                </ContentControl.Tag>
                                            </ContentControl>
                                        </ListViewItem>

                                    </StackPanel>
                                </ScrollViewer>
                            </Flyout>
                        </Button.Flyout>
                        <FontIcon Glyph="&#xE10C;" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                    </Button>


                    <!--Right-->
                    <ListView x:Name="MenuListView" 
                              Grid.Column="3" HorizontalAlignment="Right"
                              IsItemClickEnabled="True" SelectionMode="None"
                              
                              ScrollViewer.HorizontalScrollMode="Enabled"
                              ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                              ScrollViewer.IsHorizontalScrollChainingEnabled="True"
                              
                              ScrollViewer.VerticalScrollMode="Disabled"
                              ScrollViewer.VerticalScrollBarVisibility="Disabled"
                              ScrollViewer.IsVerticalScrollChainingEnabled="False"
                              >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Padding" Value="2"/>
                                <Setter Property="MinWidth" Value="50"/>
                                <Setter Property="Width" Value="54"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="Foreground" Value="{ThemeResource AppForeground}"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                    </ListView>

                    <!--Shadow
                    <Border x:Name="ShadowRectangle" IsHitTestVisible="False" Visibility="Collapsed" Width="32" Grid.Column="3" HorizontalAlignment="Left" Background="{ThemeResource AppHorizontalShadowBrush}"/>
                    -->


                </Grid>
            </elements:DrawLayout.HeadChild>

        </elements:DrawLayout>


        <!--FullScreen-->
        <StackPanel Orientation="Horizontal" Margin="4" HorizontalAlignment="Right" VerticalAlignment="Top" 
                Visibility="{x:Bind DrawLayout.UnFullScreenVisibility,Mode=OneWay}">
            <ToggleButton x:Name="WireframeButton" Width="Auto" Padding="12,0" Style="{StaticResource AppCircleToggleButtonStyle}"/>
            <Button x:Name="UnFullScreenButton" Style="{StaticResource AppCircleButtonStyle}">
                <ToolTipService.ToolTip>
                    <ToolTip x:Name="UnFullScreenToolTip" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                </ToolTipService.ToolTip>
                <FontIcon Glyph="&#xE92C;" FontSize="20" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
            </Button>
        </StackPanel>



        <!--Menu-->
        <Canvas x:Name="MenuOverlayCanvas"
                Visibility="{x:Bind DrawLayout.MenuOverlayCanvasVisibility, Mode=OneWay}"/>


        <!--Tip-->
        <ContentControl IsHitTestVisible="False" Margin="0,60,0,0" HorizontalAlignment="Center" Visibility="{x:Bind ViewModel.TipTextVisibility, Mode=OneWay}">
            <ToolTip Style="{StaticResource AppToolTipStyle}">
                <TextBlock Text="{x:Bind ViewModel.TipText, Mode=OneWay}" TextWrapping="Wrap"/>
            </ToolTip>
        </ContentControl>


        <!--Load-->
        <elements:LoadingControl x:Name="LoadingControl"/>


        <!--Dialog-->
        <elements:Dialog x:Name="SetupDialog">
            <StackPanel>
                <elements:SizePicker x:Name="SetupSizePicker"/>
                <ContentControl Height="6"/>
                <elements:CheckControl x:Name="SetupAnchorCheckControl" Margin="4,0" Foreground="{ThemeResource AppForeground}"/>
                <transformers:IndicatorControl x:Name="SetupIndicatorControl" Visibility="Collapsed" Background="{ThemeResource AppBackground}" BorderBrush="{ThemeResource AppBorderBrush}"
                                               FlowDirection="LeftToRight"/>
            </StackPanel>
        </elements:Dialog>

        <elements:Dialog x:Name="ExportDialog">
            <StackPanel>
                <elements:SizePicker x:Name="ExportSizePicker"/>
                <ContentControl Height="6"/>
                <TextBlock Text="DPI" Style="{StaticResource AppTextBlockStyle}"/>
                <elements:DPISegmented x:Name="DPIComboBox"/>
                <ContentControl Height="6"/>
                <TextBlock x:Name="ExportFileFormatTextBlock" Style="{StaticResource AppTextBlockStyle}"/>
                <elements:FileFormatSegmented x:Name="FileFormatComboBox"/>
                <ContentControl Height="6"/>
                <RelativePanel>
                    <TextBlock x:Name="ExportQualityTextBlock" Style="{StaticResource AppTextBlockStyle}"/>
                    <hsvColorPickers:NumberPicker x:Name="ExportQualityPicker" ButtonStyle="{StaticResource AppNumberButtonStyle}" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}"
                           RelativePanel.AlignRightWithPanel="True"/>
                </RelativePanel>
                <elements:SliderPicker x:Name="ExportQualitySlider" />
            </StackPanel>
        </elements:Dialog>

        <elements:Dialog x:Name="RenameDialog">
            <TextBox x:Name="RenameTextBox" AcceptsReturn="True" TextWrapping="Wrap" Margin="0" VerticalAlignment="Center" BorderThickness="0" Background="{ThemeResource AppBackground}"/>
        </elements:Dialog>


        <!--Gallery-->
        <elements:Docker x:Name="GalleryDialog" DeviceLayoutType="{x:Bind SettingViewModel.DeviceLayoutType, Mode=OneWay}">
            <elements:Docker.IconTemplate>
                <ControlTemplate>
                    <Image Width="36" Height="36" Source="ms-appx:///Icons\AppRender.png"/>
                </ControlTemplate>
            </elements:Docker.IconTemplate>
            <GridView x:Name="GalleryGridView" Padding="10,6" IsItemClickEnabled="False" ReorderMode="Disabled" SelectionMode="None"/>
        </elements:Docker>
        <photos:PhotoBillboardCanvas x:Name="BillboardCanvas"/>


    </Grid>
</Page>