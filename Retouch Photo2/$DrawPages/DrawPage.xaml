<Page
    x:Class="Retouch_Photo2.DrawPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:hsvColorPickers="using:HSVColorPickers"
    xmlns:menus="using:Retouch_Photo2.Menus"
    xmlns:tools="using:Retouch_Photo2.Tools"
    xmlns:edits="using:Retouch_Photo2.Edits"
    xmlns:elements="using:Retouch_Photo2.Elements"
    xmlns:photos="using:Retouch_Photo2.Photos"
    xmlns:operates="using:Retouch_Photo2.Operates"
    xmlns:adjustments="using:Retouch_Photo2.Adjustments"
    xmlns:effects="using:Retouch_Photo2.Effects"
    xmlns:texts="using:Retouch_Photo2.Texts"
    xmlns:strokes="using:Retouch_Photo2.Strokes"
    xmlns:styles="using:Retouch_Photo2.Styles"
    xmlns:historys="using:Retouch_Photo2.Historys"
    xmlns:transformers="using:FanKit.Transformers"
    xmlns:layers="using:Retouch_Photo2.Layers" 
    xmlns:brushs="using:Retouch_Photo2.Brushs" 
    xmlns:adjustmentsPages="using:Retouch_Photo2.Adjustments.Pages"
    xmlns:effectsPages="using:Retouch_Photo2.Effects.Pages"
    NavigationCacheMode="Required"    
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    >


    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition DefaultNavigationTransitionInfo="{StaticResource AppSuppressTransition}"/>
        </TransitionCollection>
    </Page.Transitions>


    <Page.Resources>
        <ResourceDictionary>

            <!--Color-->
            <SolidColorBrush x:Name="AccentColorBrush" Color="{ThemeResource SystemAccentColor}" />
            <SolidColorBrush x:Name="ShadowColorBrush" Color="{ThemeResource AppStrokeColor}" />


            <!--Flyout-->
            <Flyout x:Name="DocumentFlyout" Placement="Bottom" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
                <Button x:Name="DocumentUnSaveButton" Style="{StaticResource AppIconButton}">
                    <Button.Tag>
                        <FontIcon Glyph="&#xF78A;" FontSize="16" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                    </Button.Tag>
                </Button>
            </Flyout>

            <Flyout x:Name="FillColorFlyout" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
                <elements:ColorPicker2 x:Name="FilColorPicker"/>
            </Flyout>
            <Flyout x:Name="StrokeColorFlyout" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
                <elements:ColorPicker2 x:Name="StrokeColorPicker"/>
            </Flyout>

            <Flyout x:Name="MoreTransformFlyout" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
                <StackPanel x:Name="MoreTransformContent" Padding="2" MinWidth="300">

                    <!--Ratio-->
                    <TextBlock x:Name="RatioTextBlock" Style="{StaticResource AppTextBlockStyle}"/>
                    <ToggleButton HorizontalAlignment="Left" Margin="12,0" Style="{StaticResource AppCircleToggleButtonStyle}"
                                  IsChecked="{x:Bind SettingViewModel.IsRatio, Mode=TwoWay}">
                        <FontIcon Glyph="&#x1F512;" FontSize="18" FontWeight="Bold" FontFamily="Segoe UI Symbol"/>
                    </ToggleButton>

                    <ContentControl Width="4"/>

                    <!--Center-->
                    <TextBlock x:Name="CenterTextBlock2" Style="{StaticResource AppTextBlockStyle}"/>
                    <ToggleButton HorizontalAlignment="Left" Margin="12,0" Style="{StaticResource AppCircleToggleButtonStyle}"
                                  IsChecked="{x:Bind SettingViewModel.IsCenter, Mode=TwoWay}">
                        <FontIcon Glyph="&#x1F512;" FontSize="18" FontWeight="Bold" FontFamily="Segoe UI Symbol"/>
                    </ToggleButton>

                </StackPanel>
            </Flyout>
            <Flyout x:Name="MoreCreateFlyout" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
                <StackPanel x:Name="MoreCreateContent" Padding="2" MinWidth="300" Orientation="Vertical">

                    <!--Square-->
                    <TextBlock x:Name="SquareTextBlock" Style="{StaticResource AppTextBlockStyle}"/>
                    <ToggleButton HorizontalAlignment="Left" Margin="12,0" Style="{StaticResource AppCircleToggleButtonStyle}"
                                  IsChecked="{x:Bind SettingViewModel.IsSquare, Mode=TwoWay}">
                        <FontIcon Glyph="&#x1F512;" FontSize="18" FontWeight="Bold" FontFamily="Segoe UI Symbol"/>
                    </ToggleButton>

                    <ContentControl Width="4"/>

                    <!--Center-->
                    <TextBlock x:Name="CenterTextBlock" Style="{StaticResource AppTextBlockStyle}"/>
                    <ToggleButton HorizontalAlignment="Left" Margin="12,0" Style="{StaticResource AppCircleToggleButtonStyle}"
                                  IsChecked="{x:Bind SettingViewModel.IsCenter, Mode=TwoWay}">
                        <FontIcon Glyph="&#x1F512;" FontSize="18" FontWeight="Bold" FontFamily="Segoe UI Symbol"/>
                    </ToggleButton>

                </StackPanel>
            </Flyout>

        </ResourceDictionary>
    </Page.Resources>


    <Grid x:Name="RootGrid" Background="{ThemeResource AppBackground}">


        <!--Extension-->
        <elements:ApplicationTitleBarExtension x:Name="ApplicationView" TitleBarColor="{ThemeResource AppBackgroundColor}"/>


        <elements:DrawLayout x:Name="DrawLayout" 
               CanvasHitTestVisible="{x:Bind ViewModel.CanvasHitTestVisible, Mode=OneWay}"             
               DeviceLayoutType="{x:Bind SettingViewModel.DeviceLayoutType, Mode=OneWay}"
               Background="{x:Bind SettingViewModel.CanvasBackground, Mode=OneWay}"
               IsFullScreen="True"
                             
               FootPage="{x:Bind TipViewModel.ToolPage, Mode=OneWay}"
               >
            <!--LeftIcon-->
            <elements:DrawLayout.LeftIcon>
                <ContentControl Template="{x:Bind TipViewModel.ToolIcon, Mode=OneWay}"/>
            </elements:DrawLayout.LeftIcon>

            <!--RightPane-->
            <elements:DrawLayout.RightPanel>
                <ScrollViewer x:Name="LayersScrollViewer" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden">
                    <!--Layers-->
                </ScrollViewer>
            </elements:DrawLayout.RightPanel>

            <!--LeftPanel-->
            <elements:DrawLayout.LeftPanel>
                <tools:ToolsControl x:Name="ToolsControl"
                            Tools="{x:Bind TipViewModel.Tools, Mode=OneTime}"
                            Type="{x:Bind TipViewModel.ToolType, Mode=TwoWay}"
                            IsOpen="{x:Bind TipViewModel.IsOpen, Mode=OneWay}"
                            DeviceLayoutType="{x:Bind SettingViewModel.DeviceLayoutType, Mode=OneWay}"
                            />
            </elements:DrawLayout.LeftPanel>

            <!--Head-->
            <elements:DrawLayout.HeadChild>
                <Grid x:Name="AppBarGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="DocumentColumnDefinition" MinWidth="50" MaxWidth="140"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>


                    <!--Document-->
                    <Button x:Name="DocumentButton" Style="{StaticResource AppButtonStyle}">
                        <TextBlock x:Name="DocumentTextBlock" TextTrimming="CharacterEllipsis"/>
                    </Button>

                    <!--Left-->
                    <StackPanel x:Name="LeftStackPanel" Grid.Column="1" Orientation="Horizontal">
                        <Button x:Name="ExportButton" Foreground="Black" Background="#FFC003" Width="50" Style="{StaticResource AppRoundedButtonStyle}">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="ExportToolTip" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                            </ToolTipService.ToolTip>
                            <FontIcon Glyph="&#xE78B;" FontSize="22" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                        </Button>
                        <Button x:Name="UndoButton" IsEnabled="{x:Bind ViewModel.IsUndoEnabled, Mode=OneWay}" Style="{StaticResource AppCircleButtonStyle}">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="UndoToolTip" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                            </ToolTipService.ToolTip>
                            <FontIcon Glyph="&#xE10E;" FontSize="18" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                        </Button>
                        <!--<Button x:Name="RedoButton" Style="{StaticResource AppCircleButtonStyle}">
                               <ToolTipService.ToolTip>
                                <ToolTip x:Name="RedoToolTip" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                            </ToolTipService.ToolTip>
                        <FontIcon Glyph="&#xE10D;" FontSize="18" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                        </Button>-->
                        <Button x:Name="SetupButton" Style="{StaticResource AppCircleButtonStyle}">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="SetupToolTip" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                            </ToolTipService.ToolTip>
                            <FontIcon Glyph="&#xE123;" FontSize="20" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                        </Button>
                        <ToggleButton x:Name="SnapButton" IsChecked="{x:Bind SettingViewModel.IsSnap, Mode=TwoWay}" Style="{StaticResource AppCircleToggleButtonStyle}">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="SnapToolTip" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                            </ToolTipService.ToolTip>
                            <PathIcon>
                                <PathIcon.Data>
                                    M4.294,14.039l2.773,-2.773l3.747,3.747c1.159,1.159 3.04,1.159 4.199,0c1.159,-1.159 1.159,-3.04 0,-4.199l-3.747,-3.747l2.773,-2.773l4.144,4.143c2.689,2.69 2.689,7.057 0,9.746c-2.689,2.689 -7.056,2.689 -9.746,0l-4.143,-4.144Zm8.09,-11.401l-2.773,2.773l-2.639,-2.638l2.773,-2.773l2.639,2.638Zm-6.973,6.973l-2.773,2.773l-2.638,-2.639l2.773,-2.773l2.638,2.639Z
                                </PathIcon.Data>
                            </PathIcon>
                        </ToggleButton>
                        <ToggleButton x:Name="RulerButton" IsChecked="{x:Bind SettingViewModel.IsRuler, Mode=TwoWay}" Style="{StaticResource AppCircleToggleButtonStyle}">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="RulerToolTip" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                            </ToolTipService.ToolTip>
                            <FontIcon Glyph="&#xECC6;" FontSize="20" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                        </ToggleButton>
                        <Button x:Name="FullScreenButton" Style="{StaticResource AppCircleButtonStyle}">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="FullScreenToolTip" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                            </ToolTipService.ToolTip>
                            <FontIcon Glyph="&#xE92D;" FontSize="16" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                        </Button>
                        <ToggleButton x:Name="TipButton" IsChecked="{x:Bind TipViewModel.IsOpen, Mode=OneWay}" Style="{StaticResource AppCircleToggleButtonStyle}">
                            <FontIcon Glyph="&#xE897;" FontSize="18" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                        </ToggleButton>
                    </StackPanel>


                    <!--Overflow-->
                    <Button x:Name="OverflowButton" Grid.Column="2" Style="{StaticResource AppCircleButtonStyle}">
                        <Button.Flyout>
                            <Flyout x:Name="Flyout" Placement="Bottom" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
                                <StackPanel x:Name="OverflowStackPanel">
                                    <Button x:Name="OverflowExportButton" Foreground="Black" Background="#FFC003" Style="{StaticResource AppIconSelectedButton}">
                                        <Button.Tag>
                                            <FontIcon Glyph="&#xE78B;" FontSize="22" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                                        </Button.Tag>
                                    </Button>
                                    <Button x:Name="OverflowUndoButton" IsEnabled="{x:Bind ViewModel.IsUndoEnabled, Mode=OneWay}" Style="{StaticResource AppIconSelectedButton}">
                                        <Button.Tag>
                                            <FontIcon Glyph="&#xE10E;" FontSize="18" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                                        </Button.Tag>
                                    </Button>
                                    <!--<Button x:Name="OverflowRedoButton" Style="{StaticResource AppIconSelectedButton}">
                                       <Button.Tag>    
                                    <FontIcon Glyph="&#xE10D;" FontSize="18" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                                        </Button.Tag>
                                    </Button>-->
                                    <Button x:Name="OverflowSetupButton" Style="{StaticResource AppIconSelectedButton}">
                                        <Button.Tag>
                                            <FontIcon Glyph="&#xE123;" FontSize="20" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                                        </Button.Tag>
                                    </Button>
                                    <ToggleButton x:Name="OverflowSnapButton" IsChecked="{x:Bind SettingViewModel.IsSnap, Mode=TwoWay}" Style="{StaticResource AppIconToggleButtonStyle}">
                                        <ToggleButton.Tag>
                                            <PathIcon>
                                                <PathIcon.Data>
                                                    M4.294,14.039l2.773,-2.773l3.747,3.747c1.159,1.159 3.04,1.159 4.199,0c1.159,-1.159 1.159,-3.04 0,-4.199l-3.747,-3.747l2.773,-2.773l4.144,4.143c2.689,2.69 2.689,7.057 0,9.746c-2.689,2.689 -7.056,2.689 -9.746,0l-4.143,-4.144Zm8.09,-11.401l-2.773,2.773l-2.639,-2.638l2.773,-2.773l2.639,2.638Zm-6.973,6.973l-2.773,2.773l-2.638,-2.639l2.773,-2.773l2.638,2.639Z
                                                </PathIcon.Data>
                                            </PathIcon>
                                        </ToggleButton.Tag>
                                    </ToggleButton>
                                    <ToggleButton x:Name="OverflowRulerButton" IsChecked="{x:Bind SettingViewModel.IsRuler, Mode=TwoWay}" Style="{StaticResource AppIconToggleButtonStyle}">
                                        <ToggleButton.Tag>
                                            <FontIcon Glyph="&#xECC6;" FontSize="20" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                                        </ToggleButton.Tag>
                                    </ToggleButton>
                                    <Button x:Name="OverflowFullScreenButton" Style="{StaticResource AppIconSelectedButton}">
                                        <Button.Tag>
                                            <FontIcon Glyph="&#xE92D;" FontSize="16" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                                        </Button.Tag>
                                    </Button>
                                    <ToggleButton x:Name="OverflowTipButton" IsChecked="{x:Bind TipViewModel.IsOpen, Mode=OneWay}" Style="{StaticResource AppIconToggleButtonStyle}">
                                        <ToggleButton.Tag>
                                            <FontIcon Glyph="&#xE897;" FontSize="18" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                                        </ToggleButton.Tag>
                                    </ToggleButton>
                                </StackPanel>
                            </Flyout>
                        </Button.Flyout>
                        <FontIcon Glyph="&#xE10C;" FontWeight="Bold" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                    </Button>


                    <!--Right-->
                    <ScrollViewer x:Name="RightScrollViewer" Grid.Column="3" HorizontalAlignment="Right" Style="{StaticResource AppHorizontalScrollViewerStyle}">
                        <StackPanel x:Name="ExpanderButtonsStackPanel" Orientation="Horizontal">

                            <Button Width="50" Style="{StaticResource AppRoundedButtonStyle}">
                                <Button.Flyout>
                                    <Flyout x:Name="EditFlyout" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
                                        <elements:Expander x:Name="EditExpander" Flyout="{x:Bind EditFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}" >
                                            <menus:EditMenu/>
                                        </elements:Expander>
                                    </Flyout>
                                </Button.Flyout>
                                <ToolTipService.ToolTip>
                                    <ToolTip IsOpen="{x:Bind TipViewModel.IsOpen, Mode=OneWay}" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                                </ToolTipService.ToolTip>
                                <edits:Icon/>
                            </Button>
                            <Button Width="50" Style="{StaticResource AppRoundedButtonStyle}">
                                <Button.Flyout>
                                    <Flyout x:Name="OperateFlyout" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
                                        <elements:Expander x:Name="OperateExpander" Flyout="{x:Bind OperateFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}" >
                                            <menus:OperateMenu/>
                                        </elements:Expander>
                                    </Flyout>
                                </Button.Flyout>
                                <ToolTipService.ToolTip>
                                    <ToolTip IsOpen="{x:Bind TipViewModel.IsOpen, Mode=OneWay}" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                                </ToolTipService.ToolTip>
                                <operates:Icon/>
                            </Button>

                            <Button Width="50" Style="{StaticResource AppRoundedButtonStyle}">
                                <Button.Flyout>
                                    <Flyout x:Name="AdjustmentFlyout" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
                                        <elements:Expander x:Name="AdjustmentExpander" Flyout="{x:Bind AdjustmentFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}" >
                                            <menus:AdjustmentMenu Filter="{x:Bind SelectionViewModel.Filter, Mode=OneWay}">
                                                <menus:AdjustmentMenu.AdjustmentPages>
                                                    <adjustmentsPages:GrayPage/>
                                                    <adjustmentsPages:InvertPage/>
                                                    <adjustmentsPages:ExposurePage/>
                                                    <adjustmentsPages:BrightnessPage/>
                                                    <adjustmentsPages:SaturationPage/>
                                                    <adjustmentsPages:HueRotationPage/>
                                                    <adjustmentsPages:ContrastPage/>
                                                    <adjustmentsPages:TemperaturePage/>
                                                    <adjustmentsPages:HighlightsAndShadowsPage/>
                                                    <adjustmentsPages:GammaTransferPage/>
                                                    <adjustmentsPages:VignettePage/>
                                                </menus:AdjustmentMenu.AdjustmentPages>
                                            </menus:AdjustmentMenu>
                                        </elements:Expander>
                                    </Flyout>
                                </Button.Flyout>
                                <ToolTipService.ToolTip>
                                    <ToolTip IsOpen="{x:Bind TipViewModel.IsOpen, Mode=OneWay}" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                                </ToolTipService.ToolTip>
                                <adjustments:Icon/>
                            </Button>
                            <Button Width="50" Style="{StaticResource AppRoundedButtonStyle}">
                                <Button.Flyout>
                                    <Flyout x:Name="EffectFlyout" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
                                        <elements:Expander x:Name="EffectExpander" Flyout="{x:Bind EffectFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}" >
                                            <menus:EffectMenu Effect="{x:Bind SelectionViewModel.Effect, Mode=OneWay}">
                                                <menus:EffectMenu.EffectPages>
                                                    <effectsPages:GaussianBlurEffectPage/>
                                                    <effectsPages:DirectionalBlurEffectPage/>
                                                    <effectsPages:SharpenEffectPage/>
                                                    <effectsPages:OuterShadowEffectPage/>
                                                    <effectsPages:EdgeEffectPage/>
                                                    <effectsPages:MorphologyEffectPage/>
                                                    <effectsPages:EmbossEffectPage/>
                                                    <effectsPages:StraightenEffectPage/>
                                                </menus:EffectMenu.EffectPages>
                                            </menus:EffectMenu>
                                        </elements:Expander>
                                    </Flyout>
                                </Button.Flyout>
                                <ToolTipService.ToolTip>
                                    <ToolTip IsOpen="{x:Bind TipViewModel.IsOpen, Mode=OneWay}" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                                </ToolTipService.ToolTip>
                                <effects:Icon/>
                            </Button>

                            <Button Width="50" Style="{StaticResource AppRoundedButtonStyle}">
                                <Button.Flyout>
                                    <Flyout x:Name="TextFlyout" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
                                        <elements:Expander x:Name="TextExpander" Flyout="{x:Bind TextFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}" >
                                            <menus:TextMenu/>
                                        </elements:Expander>
                                    </Flyout>
                                </Button.Flyout>
                                <ToolTipService.ToolTip>
                                    <ToolTip IsOpen="{x:Bind TipViewModel.IsOpen, Mode=OneWay}" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                                </ToolTipService.ToolTip>
                                <texts:Icon/>
                            </Button>
                            <Button Width="50" Style="{StaticResource AppRoundedButtonStyle}">
                                <Button.Flyout>
                                    <Flyout x:Name="StrokeFlyout" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
                                        <elements:Expander x:Name="StrokeExpander" Flyout="{x:Bind StrokeFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}" >
                                            <menus:StrokeMenu/>
                                        </elements:Expander>
                                    </Flyout>
                                </Button.Flyout>
                                <ToolTipService.ToolTip>
                                    <ToolTip IsOpen="{x:Bind TipViewModel.IsOpen, Mode=OneWay}" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                                </ToolTipService.ToolTip>
                                <strokes:Icon/>
                            </Button>
                            <Button Width="50" Style="{StaticResource AppRoundedButtonStyle}">
                                <Button.Flyout>
                                    <Flyout x:Name="StyleFlyout" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
                                        <elements:Expander x:Name="StyleExpander" Flyout="{x:Bind StyleFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}" >
                                            <menus:StyleMenu/>
                                        </elements:Expander>
                                    </Flyout>
                                </Button.Flyout>
                                <ToolTipService.ToolTip>
                                    <ToolTip IsOpen="{x:Bind TipViewModel.IsOpen, Mode=OneWay}" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                                </ToolTipService.ToolTip>
                                <styles:Icon/>
                            </Button>

                            <Button Width="50" Style="{StaticResource AppRoundedButtonStyle}">
                                <Button.Flyout>
                                    <Flyout x:Name="HistoryFlyout" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
                                        <elements:Expander x:Name="HistoryExpander" Flyout="{x:Bind HistoryFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}" >
                                            <menus:HistoryMenu ItemsSource="{x:Bind ViewModel.Historys, Mode=OneWay}"/>
                                        </elements:Expander>
                                    </Flyout>
                                </Button.Flyout>
                                <ToolTipService.ToolTip>
                                    <ToolTip IsOpen="{x:Bind TipViewModel.IsOpen, Mode=OneWay}" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                                </ToolTipService.ToolTip>
                                <historys:Icon/>
                            </Button>
                            <Button Width="50" Style="{StaticResource AppRoundedButtonStyle}">
                                <Button.Flyout>
                                    <Flyout x:Name="TransformerFlyout" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
                                        <elements:Expander x:Name="TransformerExpander" Flyout="{x:Bind TransformerFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}" >
                                            <menus:TransformerMenu Mode="{x:Bind SelectionViewModel.SelectionMode, Mode=OneWay}" Transformer="{x:Bind SelectionViewModel.Transformer, Mode=OneWay}" ToolType="{x:Bind TipViewModel.ToolType, Mode=OneWay}"/>
                                        </elements:Expander>
                                    </Flyout>
                                </Button.Flyout>
                                <ToolTipService.ToolTip>
                                    <ToolTip IsOpen="{x:Bind TipViewModel.IsOpen, Mode=OneWay}" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                                </ToolTipService.ToolTip>
                                <transformers:Icon/>
                            </Button>
                            <Button Width="50" Style="{StaticResource AppRoundedButtonStyle}">
                                <Button.Flyout>
                                    <Flyout x:Name="LayerFlyout" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
                                        <elements:Expander x:Name="LayerExpander" Flyout="{x:Bind LayerFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}" >
                                            <menus:LayerMenu/>
                                        </elements:Expander>
                                    </Flyout>
                                </Button.Flyout>
                                <ToolTipService.ToolTip>
                                    <ToolTip IsOpen="{x:Bind TipViewModel.IsOpen, Mode=OneWay}" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                                </ToolTipService.ToolTip>
                                <layers:Icon/>
                            </Button>

                            <Button Width="50" Style="{StaticResource AppRoundedButtonStyle}">
                                <Button.Flyout>
                                    <Flyout x:Name="ColorFlyout" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
                                        <elements:Expander x:Name="ColorExpander" Flyout="{x:Bind ColorFlyout}" OverlayCanvas="{x:Bind MenuOverlayCanvas}" PinStackPanel="{x:Bind DrawLayout.PinStackPanel}" >
                                            <menus:ColorMenu/>
                                        </elements:Expander>
                                    </Flyout>
                                </Button.Flyout>
                                <ToolTipService.ToolTip>
                                    <ToolTip IsOpen="{x:Bind TipViewModel.IsOpen, Mode=OneWay}" Placement="Bottom" Style="{StaticResource AppToolTipStyle}"/>
                                </ToolTipService.ToolTip>
                                <brushs:ColorEllipse Color="{x:Bind SelectionViewModel.Color, Mode=OneWay}"/>
                            </Button>

                        </StackPanel>
                    </ScrollViewer>


                    <!--Shadow-->
                    <Border x:Name="ShadowRectangle" IsHitTestVisible="False" Visibility="Collapsed" Width="32" Grid.Column="3" HorizontalAlignment="Left" Background="{ThemeResource AppHorizontalShadowBrush}"/>


                </Grid>
            </elements:DrawLayout.HeadChild>

        </elements:DrawLayout>


        <!--FullScreen-->
        <Button x:Name="UnFullScreenButton" Margin="4" HorizontalAlignment="Right" VerticalAlignment="Top" Style="{StaticResource AppCircleButtonStyle}"
              Visibility="{x:Bind DrawLayout.UnFullScreenButtonVisibility, Mode=OneWay}">
            <FontIcon Glyph="&#xE92C;" FontSize="20" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
        </Button>


        <!--Menu-->
        <Canvas x:Name="MenuOverlayCanvas" IsHitTestVisible="{x:Bind ViewModel.CanvasHitTestVisible, Mode=OneWay}"/>


        <!--Tip-->
        <ContentControl Grid.Row="1" IsHitTestVisible="False" Margin="0,60,0,0" HorizontalAlignment="Center" Visibility="{x:Bind ViewModel.TipTextVisibility, Mode=OneWay}">
            <ToolTip Style="{StaticResource AppToolTipStyle}">
                <TextBlock Text="{x:Bind ViewModel.TipText, Mode=OneWay}" TextWrapping="Wrap"/>
            </ToolTip>
        </ContentControl>


        <!--Load-->
        <elements:LoadingControl x:Name="LoadingControl"/>


        <!--Dialog-->
        <elements:Dialog x:Name="SetupDialog">
            <StackPanel>
                <elements:SizePicker x:Name="SetupSizePicker"/>
                <ContentControl Height="6"/>
                <CheckBox x:Name="SetupAnchorCheckBox" Margin="4,0" Foreground="{ThemeResource AppText}"/>
                <transformers:IndicatorControl x:Name="SetupIndicatorControl" Visibility="Collapsed" Background="{ThemeResource AppForeground}" BorderBrush="{ThemeResource AppStroke}"
                                               FlowDirection="LeftToRight"/>
            </StackPanel>
        </elements:Dialog>

        <elements:Dialog x:Name="ExportDialog">
            <StackPanel>
                <elements:SizePicker x:Name="ExportSizePicker"/>
                <ContentControl Height="6"/>
                <TextBlock Text="DPI" Style="{StaticResource AppTextBlockStyle}"/>
                <elements:DPIComboBox x:Name="DPIComboBox"/>
                <ContentControl Height="6"/>
                <TextBlock x:Name="ExportFileFormatTextBlock" Style="{StaticResource AppTextBlockStyle}"/>
                <elements:FileFormatComboBox x:Name="FileFormatComboBox"/>
                <ContentControl Height="6"/>
                <RelativePanel>
                    <TextBlock x:Name="ExportQualityTextBlock" Style="{StaticResource AppTextBlockStyle}"/>
                    <hsvColorPickers:NumberPicker x:Name="ExportQualityPicker" ButtonStyle="{StaticResource AppNumberButtonStyle}" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}"
                           RelativePanel.AlignRightWithPanel="True"/>
                </RelativePanel>
                <elements:SliderPicker x:Name="ExportQualitySlider" />
            </StackPanel>
        </elements:Dialog>

        <elements:Dialog x:Name="RenameDialog">
            <TextBox x:Name="RenameTextBox" Margin="0" VerticalAlignment="Center" BorderThickness="0" Background="{ThemeResource AppBackground}"/>
        </elements:Dialog>


        <!--Gallery-->
        <elements:DialogWide x:Name="GalleryDialog">
            <GridView x:Name="GalleryGridView" Grid.Row="2" Padding="14,0" IsItemClickEnabled="False" ReorderMode="Disabled" SelectionMode="None"/>
        </elements:DialogWide>
        <photos:PhotoBillboardCanvas x:Name="BillboardCanvas"/>


        <!--Transition-->
        <Border x:Name="TransitionBorder" IsHitTestVisible="False" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Border.Resources>
                <!--Transition-->
                <Storyboard x:Name="TransitionStoryboard">
                    <DoubleAnimationUsingKeyFrames x:Name="TransitionKeyFrames" Storyboard.TargetName="TransitionSlider" Storyboard.TargetProperty="Value" EnableDependentAnimation ="True">
                        <EasingDoubleKeyFrame KeyTime="00:00:0.8" Value="1.0">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <QuinticEase EasingMode="EaseInOut"/>
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </Border.Resources>
            <ProgressBar x:Name="TransitionSlider" Width="200" Minimum="0" Maximum="1"/>
        </Border>


    </Grid>
</Page>