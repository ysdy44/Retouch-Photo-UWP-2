<UserControl
    x:Class="Retouch_Photo2.Elements.MainLayout"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:developerTools="using:Microsoft.Toolkit.Uwp.DeveloperTools"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:local="using:Retouch_Photo2.Elements"
    d:DesignHeight="800"
    d:DesignWidth="800"
    mc:Ignorable="d"
    >


    <Grid x:Name="RootGrid">

        <!--VisualState-->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">

                <!--Normal-->
                <VisualState x:Name="Normal"/>

                <!--Initial-->
                <VisualState x:Name="Initial">
                    <VisualState.Setters>

                        <!--Select-->
                        <Setter Target = "_SelectCheckBox.Content" Value="Initial"/>

                        <!--Body-->
                        <Setter Target = "InitialBorder.Visibility" Value="Visible"/>

                        <!--Foot-->
                        <Setter Target = "RadiusAnimaPanel.Visibility" Value="Collapsed"/>

                    </VisualState.Setters>
                </VisualState>

                <!--Main-->
                <VisualState x:Name="Main">
                    <VisualState.Setters>

                        <!--Select-->
                        <Setter Target = "_SelectCheckBox.Content" Value="Main"/>

                        <!--Foot-->
                        <Setter Target = "MainBorder.Visibility" Value="Visible"/>

                    </VisualState.Setters>
                </VisualState>

                <!--Pictures-->
                <VisualState x:Name="Pictures">
                    <VisualState.Setters>

                        <!--Select-->
                        <Setter Target = "_SelectCheckBox.Content" Value="Pictures"/>

                        <!--Foot-->
                        <Setter Target = "PicturesBorder.Visibility" Value="Visible"/>

                    </VisualState.Setters>
                </VisualState>

                <!--Rename-->
                <VisualState x:Name="Rename">
                    <VisualState.Setters>

                        <!--Select-->
                        <Setter Target = "_SelectCheckBox.IsChecked" Value="{x:Null}"/>
                        <Setter Target = "_SelectCheckBox.IsThreeState" Value="True"/>
                        <Setter Target = "_SelectCheckBox.Content" Value="Rename"/>

                        <!--Head-->
                        <Setter Target = "HeadBorder.Visibility" Value="Collapsed"/>

                        <!--Foot-->
                        <Setter Target = "RenameBorder.Visibility" Value="Visible"/>

                    </VisualState.Setters>
                </VisualState>

                <!--Save-->
                <VisualState x:Name="Save">
                    <VisualState.Setters>

                        <!--Select-->
                        <Setter Target = "_SelectCheckBox.IsChecked" Value="true"/>
                        <Setter Target = "SelectBorder.Visibility" Value="Visible"/>
                        <Setter Target = "_SelectCheckBox.Content" Value="Save"/>

                        <!--Foot-->
                        <Setter Target = "SaveBorder.Visibility" Value="Visible"/>

                    </VisualState.Setters>
                </VisualState>

                <!--Share-->
                <VisualState x:Name="Share">
                    <VisualState.Setters>

                        <!--Select-->
                        <Setter Target = "_SelectCheckBox.IsChecked" Value="true"/>
                        <Setter Target = "SelectBorder.Visibility" Value="Visible"/>
                        <Setter Target = "_SelectCheckBox.Content" Value="Share"/>

                        <!--Foot-->
                        <Setter Target = "ShareBorder.Visibility" Value="Visible"/>

                    </VisualState.Setters>
                </VisualState>

                <!--Delete-->
                <VisualState x:Name="Delete">
                    <VisualState.Setters>

                        <!--Select-->
                        <Setter Target = "_SelectCheckBox.IsChecked" Value="true"/>
                        <Setter Target = "SelectBorder.Visibility" Value="Visible"/>
                        <Setter Target = "_SelectCheckBox.Content" Value="Delete"/>

                        <!--Foot-->
                        <Setter Target = "DeleteBorder.Visibility" Value="Visible"/>

                    </VisualState.Setters>
                </VisualState>

                <!--Duplicate-->
                <VisualState x:Name="Duplicate">
                    <VisualState.Setters>

                        <!--Select-->
                        <Setter Target = "_SelectCheckBox.IsChecked" Value="true"/>
                        <Setter Target = "SelectBorder.Visibility" Value="Visible"/>
                        <Setter Target = "_SelectCheckBox.Content" Value="Duplicate"/>

                        <!--Foot-->
                        <Setter Target = "DuplicateBorder.Visibility" Value="Visible"/>

                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>


        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto" MinHeight="70"/>
        </Grid.RowDefinitions>

        <!--Developer-->
        <developerTools:AlignmentGrid Grid.RowSpan="3" Opacity="0.1" HorizontalStep="20" VerticalStep="20" LineBrush="White" Visibility="{ThemeResource AppGridVisibility}" />


        <!--Body-->
        <Border Grid.RowSpan="3">
            <GridView x:Name="_GridView" 
                      Padding="0,20"
                      ReorderMode="Disabled" 
                      SelectionMode="None"
                      animations:ReorderGridAnimation.Duration="300"
                      >

                <GridView.Header>
                    <ContentControl HorizontalAlignment="Center" ContentTemplate="{StaticResource AppListViewBaseHeader}"/>
                </GridView.Header>

                <GridView.ItemContainerStyle>
                    <Style TargetType="GridViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                    </Style>
                </GridView.ItemContainerStyle>
                
                <GridView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsWrapGrid Orientation="Horizontal" ItemWidth="140" ItemHeight="140"/>
                    </ItemsPanelTemplate>
                </GridView.ItemsPanel>

                <GridView.ItemContainerTransitions>
                    <TransitionCollection>
                        <AddDeleteThemeTransition />
                        <ContentThemeTransition />
                        <ReorderThemeTransition />
                        <EntranceThemeTransition IsStaggeringEnabled="False" />
                    </TransitionCollection>
                </GridView.ItemContainerTransitions>

                <GridView.Template>
                    <ControlTemplate TargetType="GridView">
                        <ScrollViewer x:Name="ScrollViewer"
                            TabNavigation="{TemplateBinding TabNavigation}"
                            HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                            IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
                            VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                            IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
                            IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                            IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                            ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                            IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                            BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                            AutomationProperties.AccessibilityView="Raw">
                            <ItemsPresenter HorizontalAlignment="Center"
                                Header="{TemplateBinding Header}"
                                HeaderTemplate="{TemplateBinding HeaderTemplate}"
                                HeaderTransitions="{TemplateBinding HeaderTransitions}"
                                Footer="{TemplateBinding Footer}"
                                FooterTemplate="{TemplateBinding FooterTemplate}"
                                FooterTransitions="{TemplateBinding FooterTransitions}"
                                Padding="{TemplateBinding Padding}" />
                        </ScrollViewer>
                    </ControlTemplate>
                </GridView.Template>

                <GridView.Footer>
                    <ContentControl HorizontalAlignment="Center" ContentTemplate="{StaticResource AppListViewBaseFooter}"/>
                </GridView.Footer>

            </GridView>
        </Border>

        <Border x:Name="InitialBorder" Grid.Row="1" Grid.RowSpan="2" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center">
        </Border>


        <!--Foot-->
        <local:RadiusAnimaPanel x:Name="RadiusAnimaPanel" Grid.Row="2" CornerRadius="0" Background="{ThemeResource AppForeground}">

            <local:RadiusAnimaPanel.Content>
                <Grid>
                    <Border x:Name="MainBorder" Visibility="Collapsed"/>
                    <Border x:Name="PicturesBorder" Visibility="Collapsed"/>
                    <Border x:Name="RenameBorder" Visibility="Collapsed"/>
                    <Border x:Name="SaveBorder" Visibility="Collapsed"/>
                    <Border x:Name="ShareBorder" Visibility="Collapsed"/>
                    <Border x:Name="DeleteBorder" Visibility="Collapsed"/>
                    <Border x:Name="DuplicateBorder" Visibility="Collapsed"/>
                </Grid>
            </local:RadiusAnimaPanel.Content>

        </local:RadiusAnimaPanel>


        <!--Head-->
        <CheckBox x:Name="_SelectCheckBox" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center"/>

        <Border x:Name="HeadBorder" >
        </Border>

        <Border x:Name="SelectBorder" Visibility="Collapsed" RequestedTheme="Dark" HorizontalAlignment="Stretch" Background="{ThemeResource SystemAccentColor}">
        </Border>


    </Grid>

</UserControl>